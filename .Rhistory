### hierarchical: binomial survival of females, nbinom offspring#
# 25 Sep 2011#
#
# parms#
x = 1#
r = 1#
p = 1/(1 + exp(x))#
R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),5)) # females introduced#
Ot = rbinom(length(Nt), Nt, p) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = R * Ot) # galls#
#
#
#
# specify neg log likelihood function#
parms = list(x = -1.3, r = 1)#
#
nL = function(x, r, debug=TRUE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = -crossprod(#
			dbinom(O, size = Nt[i], p = 1 / (1 + exp(-p))),#
			dpois(Nt1[i], lambda= O * R)#
		)#
	negL = sum(L)#
	if(debug)#
		cat(x, R, negL, '\n')#
	return(negL)#
	}#
}#
#
#
# fit#
library(bbmle)#
nL(parms)#
#
m1 = mle2(nL, start=parms, control=list(trace=TRUE))#
cat('True values:', 'p =', p, 'R =', R, '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
nL(parms)
parms = list(x = 1.3, r = 1)
nL(x = 1.3, r=1 )
nL(x = 1, r=1 )
### hierarchical: binomial survival of females, nbinom offspring#
# 25 Sep 2011#
#
# parms#
x = 1#
r = 1#
p = 1/(1 + exp(x))#
R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),5)) # females introduced#
Ot = rbinom(length(Nt), Nt, p) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = R * Ot) # galls#
#
#
#
# specify neg log likelihood function#
parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=TRUE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = -crossprod(#
			dbinom(O, size = Nt[i], p = 1 / (1 + exp(-p))),#
			dpois(Nt1[i], lambda= O * R)#
		)#
	negL = sum(L)#
	if(debug)#
		cat(x, R, negL, '\n')#
	return(negL)#
	}#
}#
#
#
# fit#
library(bbmle)#
nL(x = 1, r=1 )#
#
m1 = mle2(nL, start=parms, control=list(trace=TRUE))#
cat('True values:', 'p =', p, 'R =', R, '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
### hierarchical: binomial survival of females, nbinom offspring#
# 25 Sep 2011#
#
# parms#
x = 1#
r = 1#
p = 1/(1 + exp(x))#
R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),5)) # females introduced#
Ot = rbinom(length(Nt), Nt, p) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = R * Ot) # galls#
#
#
#
# specify neg log likelihood function#
parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=TRUE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = -crossprod(#
			dbinom(O, size = Nt[i], p = 1 / (1 + exp(-p))),#
			dpois(Nt1[i], lambda= O * R)#
		)#
	negL = sum(L)#
	if(debug)#
		cat(x, R, negL, '\n')#
	return(negL)#
	}#
}#
#
#
# fit#
library(bbmle)#
nL(x = 1, r=1 )#
#
m1 = mle2(nL, start=list(x=1, r=1), control=list(trace=TRUE))#
cat('True values:', 'p =', p, 'R =', R, '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
### hierarchical: binomial survival of females, nbinom offspring#
# 25 Sep 2011#
#
# parms#
x = 1#
r = 1#
p = 1/(1 + exp(x))#
R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),5)) # females introduced#
Ot = rbinom(length(Nt), Nt, p) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = R * Ot) # galls#
#
#
#
# specify neg log likelihood function#
parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=TRUE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = -crossprod(#
			dbinom(O, size = Nt[i], p = 1 / (1 + exp(-p))),#
			dpois(Nt1[i], lambda= O * R)#
		)#
	negL = sum(L)#
	if(debug)#
		cat(x, R, negL, '\n')#
	return(negL)#
	}#
}#
#
#
# fit#
library(bbmle)#
nL(x = 1, r=1 )#
#
m1 = mle2(nL, start=list(x=1.3, r=1), control=list(trace=TRUE))#
cat('True values:', 'p =', p, 'R =', R, '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
### hierarchical: binomial survival of females, nbinom offspring#
# 25 Sep 2011#
#
# parms#
x = 1#
r = 1#
p = 1/(1 + exp(x))#
R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),5)) # females introduced#
Ot = rbinom(length(Nt), Nt, p) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = R * Ot) # galls#
#
#
#
# specify neg log likelihood function#
parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=TRUE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = -crossprod(#
			dbinom(O, size = Nt[i], p = 1 / (1 + exp(-p))),#
			dpois(Nt1[i], lambda= O * R)#
		)#
	negL = sum(L)#
	if(debug)#
		cat(x, R, negL, '\n')#
	return(negL)#
	}#
}#
#
#
# fit#
library(bbmle)#
nL(x = 1, r=1 )#
#
m1 = mle2(nL, start=list(x=1.4, r=1), control=list(trace=TRUE))#
cat('True values:', 'p =', p, 'R =', R, '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
### hierarchical: binomial survival of females, nbinom offspring#
# 25 Sep 2011#
#
# parms#
x = 1#
r = 1#
p = 1/(1 + exp(x))#
R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),5)) # females introduced#
Ot = rbinom(length(Nt), Nt, p) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = R * Ot) # galls#
#
#
#
# specify neg log likelihood function#
parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=TRUE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = -crossprod(#
			dbinom(O, size = Nt[i], p = 1 / (1 + exp(-p))),#
			dpois(Nt1[i], lambda= O * R)#
		)#
	negL = sum(L)#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
	}#
}#
#
#
#
#
#
#
#
#
# fit#
library(bbmle)#
nL(x = 1.3, r=1)#
#
m1 = mle2(nL, start=list(x=1.4, r=1), control=list(trace=TRUE))#
cat('True values:', 'p =', p, 'R =', R, '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
Nt1
Nt = 4
Nt1 = 1
p
R
1/(1+ exp(1))
1/(1+ exp(10))
1/(1+ exp(0))
O
i
i = 1
		O = 0:max(Nt[i])
O
p
dbinom(O, size = Nt[i], p = 1 / (1 + exp(-p))),#
			dpois(Nt1[i], lambda= O * R)
-crossprod(#
			dbinom(O, size = Nt[i], p = 1 / (1 + exp(-p))),#
			dpois(Nt1[i], lambda= O * R)#
		)
rm(list=ls())
x = 1#
r = 1#
p = 1/(1 + exp(x))#
R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),5)) # females introduced#
Ot = rbinom(length(Nt), Nt, p) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = R * Ot) # galls
NT
Nt
plot(Nt1 ~ Nt)
x = 10#
r = 1#
p = 1/(1 + exp(x))#
R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),5)) # females introduced#
Ot = rbinom(length(Nt), Nt, p) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = R * Ot) # galls
plot(Nt1 ~ Nt)
1/ (1+10)
1/ (1+exp(10))
1/ (1+exp(5))
1/ (1+exp(8))
1 - 1/ (1+exp(8))
1 - 1/ (1+exp(10))
x = 0 # when x=8, Pr of survival=0.000; x=0, Pr=0.5; x=-8, Pr=0.999#
r = 1#
p = 1/(1 + exp(x))#
R = exp(r)
x = 2 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999
p = 1/(1 + exp(x))
p
x = 1 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999
r = 1
p = 1/(1 + exp(x))
p
Nt = sort(rep(c(0,1,2,4,8,16),5)) # females introduced
Ot = rbinom(length(Nt), Nt, p) # females surviving to oviposit
Nt1 = rpois(length(Nt), lambda = R * Ot) # galls
plot(Nt1 ~ NT)
plot(Nt1 ~ Nt)
nL = function(x, r, debug=TRUE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = -crossprod(#
			dbinom(O, size = Nt[i], p = 1 / (1 + exp(-p))),#
			dpois(Nt1[i], lambda= O * R)#
		)#
	}#
	negL = sum(L)#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}
nL(x = 1.3, r=1)
nL(x = 1, r=1)
### hierarchical: binomial survival of females, nbinom offspring#
# 25 Sep 2011#
#
# parms#
x = 1 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 1#
#
p = 1/(1 + exp(x))#
R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),5)) # females introduced#
Ot = rbinom(length(Nt), Nt, p) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = R * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=TRUE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = -crossprod(#
			dbinom(O, size = Nt[i], p = 1 / (1 + exp(-p))),#
			dpois(Nt1[i], lambda= O * R)#
		)#
	}#
	negL = sum(L)#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
#
#
# fit#
library(bbmle)#
nL(x = 1, r=1)#
#
m1 = mle2(nL, start=list(x=1.4, r=1.1), control=list(trace=TRUE))#
cat('True values:', 'p =', p, 'R =', R, '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
### hierarchical: binomial survival of females, nbinom offspring#
# 25 Sep 2011#
#
# parms#
x = 1 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 1#
#
p = 1/(1 + exp(x))#
R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),5)) # females introduced#
Ot = rbinom(length(Nt), Nt, p) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = R * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=TRUE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = -crossprod(#
			dbinom(O, size = Nt[i], p = 1 / (1 + exp(-p))),#
			dpois(Nt1[i], lambda= O * R)#
		)#
		print(L[i])#
	}#
	negL = sum(L)#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
#
#
# fit#
library(bbmle)#
nL(x = 1, r=1)#
#
m1 = mle2(nL, start=list(x=1.4, r=1.1), control=list(trace=TRUE))#
cat('True values:', 'p =', p, 'R =', R, '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
dbinom(O, size = Nt[i], p = 1 / (1 + exp(-p)) log=TRUE)
dbinom(O, size = Nt[i], p = 1 / (1 + exp(-p)), log=TRUE)
O
0:max(Nt[i])
i=1
Nt
O = 0:max(Nt[i])
O
dbinom(O, size = Nt[i], p = 1 / (1 + exp(-p)), log=TRUE)
dpois(Nt1[i], lambda= O * R)
Nt1
L[i] = -crossprod(#
			dbinom(O, size = Nt[i], p = 1 / (1 + exp(-p)), log=TRUE),#
			dpois(Nt1[i], lambda= O * R)#
		)
	L = numeric(length(Nt1))
Nt1
print(L[i])
dbinom(O, size = Nt[i], p = 1 / (1 + exp(-p)), log=TRUE)
log(1)
dbinom(O, size = Nt[i], p = 1 / (1 + exp(-p)), log=FALSE)
?crossprod
prod(1,3)
crossprod(1,3)
crossprod(2,3)
prod(2,3)
log(2+#)
log(2+3)
exp(log(2+3))
exp(log(2*3))
exp(log(2) + log(3))
1 / (1 + exp(-p)
)
p
### hierarchical: binomial survival of females, nbinom offspring#
# 25 Sep 2011#
#
# parms#
x = 1 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 1#
#
p = 1/(1 + exp(x))#
R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),5)) # females introduced#
Ot = rbinom(length(Nt), Nt, p) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = R * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=TRUE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = -prod(#
			dbinom(O, size = Nt[i], p = p),#
			dpois(Nt1[i], lambda= O * R, log=TRUE)#
		)#
		print(L[i])#
	}#
	negL = sum(L)#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
nL(x = 1, r=1)#
#
m1 = mle2(nL, start=list(x=1.4, r=1.1), control=list(trace=TRUE))#
cat('True values:', 'p =', p, 'R =', R, '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
?mle2
### hierarchical: binomial survival of females, nbinom offspring#
# 25 Sep 2011#
#
# parms#
x = 1 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 1#
#
p = 1/(1 + exp(x))#
R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),5)) # females introduced#
Ot = rbinom(length(Nt), Nt, p) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = R * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=TRUE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = prod(#
			dbinom(O, size = Nt[i], p = p),#
			dpois(Nt1[i], lambda= O * R, log=TRUE)#
		)#
		print(L[i])#
	}#
	negL = -sum(L)#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
nL(x = 1, r=1)#
#
m1 = mle2(nL, start=list(x=1.4, r=1.1), control=list(trace=TRUE))#
cat('True values:', 'p =', p, 'R =', R, '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
### hierarchical: binomial survival of females, nbinom offspring#
# 25 Sep 2011#
#
# parms#
x = 1 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 1#
#
p = 1/(1 + exp(x))#
R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),5)) # females introduced#
Ot = rbinom(length(Nt), Nt, p) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = R * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=TRUE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = prod(#
			dbinom(O, size = Nt[i], p = p),#
			dpois(Nt1[i], lambda= O * R, log=TRUE)#
		)#
		#print(L[i])#
	}#
	negL = -sum(L)#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
nL(x = 1, r=1)#
#
m1 = mle2(nL, start=list(x=1.4, r=1.1), control=list(trace=TRUE))#
cat('True values:', 'p =', p, 'R =', R, '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
nL(x = 0, r=1)
p
rm(list=ls())
### hierarchical: binomial survival of females, nbinom offspring#
# 25 Sep 2011#
#
# parms#
x = 1 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 1#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),5)) # females introduced#
Ot = rbinom(length(Nt), Nt, p) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = R * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=TRUE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = prod(#
			dbinom(O, size = Nt[i], p = p),#
			dpois(Nt1[i], lambda= O * R, log=TRUE)#
		)#
		#print(L[i])#
	}#
	negL = -sum(L)#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=1.4, r=1.1), control=list(trace=TRUE))#
cat('True values:', 'p =', p, 'R =', R, '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
rm(list=ls())
### hierarchical: binomial survival of females, nbinom offspring#
# 25 Sep 2011#
#
# parms#
x = 1 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 1#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),5)) # females introduced#
Ot = rbinom(length(Nt), Nt, 1/(1 + exp(x)) ) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = R * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=TRUE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = prod(#
			dbinom(O, size = Nt[i], p = p),#
			dpois(Nt1[i], lambda= O * R, log=TRUE)#
		)#
		#print(L[i])#
	}#
	negL = -sum(L)#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=1.4, r=1.1), control=list(trace=TRUE))#
cat('True values:', 'p =', p, 'R =', R, '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
Nt1 = rpois(length(Nt), lambda = exp(r) * Ot) # galls
rm(list=ls())
### hierarchical: binomial survival of females, nbinom offspring#
# 25 Sep 2011#
#
# parms#
x = 1 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 1#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),5)) # females introduced#
Ot = rbinom(length(Nt), Nt, 1/(1 + exp(x)) ) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = exp(r) * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=TRUE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = prod(#
			dbinom(O, size = Nt[i], p = p),#
			dpois(Nt1[i], lambda= O * R, log=TRUE)#
		)#
		#print(L[i])#
	}#
	negL = -sum(L)#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=1.4, r=1.1), control=list(trace=TRUE))#
cat('True values:', 'p =', p, 'R =', R, '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
### hierarchical: binomial survival of females, nbinom offspring#
# 25 Sep 2011#
#
# parms#
x = 1 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 1#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),5)) # females introduced#
Ot = rbinom(length(Nt), Nt, 1/(1 + exp(x)) ) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = exp(r) * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=TRUE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = prod(#
			dbinom(O, size = Nt[i], p = p),#
			dpois(Nt1[i], lambda= O * R)#
		)#
		#print(L[i])#
	}#
	negL = -sum(L)#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=1.4, r=1.1), control=list(trace=TRUE))#
cat('True values:', 'p =', p, 'R =', R, '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
cat('True values:', 'p =', 1/(1 + exp(x)), 'R =', exp(r), '\n')
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
### hierarchical: binomial survival of females, nbinom offspring#
# 25 Sep 2011#
#
# parms#
x = 1 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 1#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),5)) # females introduced#
Ot = rbinom(length(Nt), Nt, 1/(1 + exp(x)) ) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = exp(r) * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=TRUE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = prod(#
			dbinom(O, size = Nt[i], p = p),#
			dpois(Nt1[i], lambda= O * R)#
		)#
		#print(L[i])#
	}#
	negL = -sum(L)#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=1.1, r=1.1), control=list(trace=TRUE))#
cat('True values:', 'p =', 1/(1 + exp(x)), 'R =', exp(r), '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
### hierarchical: binomial survival of females, nbinom offspring#
# 25 Sep 2011#
#
# parms#
x = 8 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 1#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),5)) # females introduced#
Ot = rbinom(length(Nt), Nt, 1/(1 + exp(x)) ) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = exp(r) * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=TRUE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = prod(#
			dbinom(O, size = Nt[i], p = p),#
			dpois(Nt1[i], lambda= O * R)#
		)#
		#print(L[i])#
	}#
	negL = -sum(L)#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=1.1, r=1.1), control=list(trace=TRUE))#
cat('True values:', 'p =', 1/(1 + exp(x)), 'R =', exp(r), '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
### hierarchical: binomial survival of females, nbinom offspring#
# 25 Sep 2011#
#
# parms#
x = 8 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 1#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),10)) # females introduced#
Ot = rbinom(length(Nt), Nt, 1/(1 + exp(x)) ) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = exp(r) * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=TRUE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = prod(#
			dbinom(O, size = Nt[i], p = p),#
			dpois(Nt1[i], lambda= O * R)#
		)#
		#print(L[i])#
	}#
	negL = -sum(L)#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=1.1, r=1.1), control=list(trace=TRUE))#
cat('True values:', 'p =', 1/(1 + exp(x)), 'R =', exp(r), '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
Nt1 = c(0,1,2)
rm(list=ls())
Nt1 = c(0,1,2)
Nt = c(0,1,2)
Nt1 = c(0, 0, 2)
Nt = 3
Nt = 4
Nt1 = 2
O = 0:max(Nt[i])
i = 1
O = 0:max(Nt[i])
O
	L = numeric(length(Nt1))
L
x = 1 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999
r = 1
	p = 1/(1 + exp(x))
	R = exp(r)
p
R
L[i] = prod(#
			dbinom(O, size = Nt[i], p = p),#
			dpois(Nt1[i], lambda= O * R)#
		)
L
dbinom(O, size = Nt[i], p = p)
dpois(Nt1[i], lambda= O * R)
prod(#
			dbinom(O, size = Nt[i], p = p),#
			dpois(Nt1[i], lambda= O * R)
)
O
dbinom(0, 4, p)
crossprod(#
			dbinom(O, size = Nt[i], p = p),#
			dpois(Nt1[i], lambda= O * R)
		)
dbinom(O, size = Nt[i], p = p) *#
			dpois(Nt1[i], lambda= O * R)
sum(#
			dbinom(O, size = Nt[i], p = p) *#
			dpois(Nt1[i], lambda= O * R)#
		)
### hierarchical: binomial survival of females, Poisson offspring#
# 25 Sep 2011#
#
# parms#
x = 1 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 1#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),10)) # females introduced#
Ot = rbinom(length(Nt), Nt, 1/(1 + exp(x)) ) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = exp(r) * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=TRUE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = sum(#
			dbinom(O, size = Nt[i], p = p) *#
			dpois(Nt1[i], lambda= O * R)#
		)#
#
	}#
	negL = -prod(L)#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=1.1, r=1.1), control=list(trace=TRUE))#
cat('True values:', 'p =', 1/(1 + exp(x)), 'R =', exp(r), '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
### hierarchical: binomial survival of females, Poisson offspring#
# 25 Sep 2011#
#
# parms#
x = 1 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 2#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),10)) # females introduced#
Ot = rbinom(length(Nt), Nt, 1/(1 + exp(x)) ) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = exp(r) * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=TRUE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = sum(#
			dbinom(O, size = Nt[i], p = p) *#
			dpois(Nt1[i], lambda= O * R)#
		)#
#
	}#
	negL = -prod(L)#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=1.1, r=1.1), control=list(trace=TRUE))#
cat('True values:', 'p =', 1/(1 + exp(x)), 'R =', exp(r), '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
### hierarchical: binomial survival of females, Poisson offspring#
# 25 Sep 2011#
#
# parms#
x = 1 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 2#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),10)) # females introduced#
Ot = rbinom(length(Nt), Nt, 1/(1 + exp(x)) ) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = exp(r) * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=TRUE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = sum(#
			dbinom(O, size = Nt[i], p = p) *#
			dpois(Nt1[i], lambda= O * R)#
		)#
#
	}#
	negL = -prod(L)#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=1.1, r=1.1), control=list(trace=FALSE))#
cat('True values:', 'p =', 1/(1 + exp(x)), 'R =', exp(r), '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
### hierarchical: binomial survival of females, Poisson offspring#
# 25 Sep 2011#
#
# parms#
x = 1 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 2#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),10)) # females introduced#
Ot = rbinom(length(Nt), Nt, 1/(1 + exp(x)) ) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = exp(r) * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=TRUE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = sum(#
			dbinom(O, size = Nt[i], p = p) *#
			dpois(Nt1[i], lambda= O * R)#
		)#
#
	}#
	negL = -prod(L)#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=1.1, r=1.1), control=list(trace=FALSE, debug=FALSE))#
cat('True values:', 'p =', 1/(1 + exp(x)), 'R =', exp(r), '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
### hierarchical: binomial survival of females, Poisson offspring#
# 25 Sep 2011#
#
# parms#
x = 1 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 2#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),10)) # females introduced#
Ot = rbinom(length(Nt), Nt, 1/(1 + exp(x)) ) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = exp(r) * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=FALSE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = sum(#
			dbinom(O, size = Nt[i], p = p) *#
			dpois(Nt1[i], lambda= O * R)#
		)#
#
	}#
	negL = -prod(L)#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=1.1, r=1.1), control=list(trace=FALSE))#
cat('True values:', 'p =', 1/(1 + exp(x)), 'R =', exp(r), '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
nL(x = 0, r=1)
### hierarchical: binomial survival of females, Poisson offspring#
# 25 Sep 2011#
#
# parms#
x = 1 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 0.5#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),10)) # females introduced#
Ot = rbinom(length(Nt), Nt, 1/(1 + exp(x)) ) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = exp(r) * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=FALSE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = sum(#
			dbinom(O, size = Nt[i], p = p) *#
			dpois(Nt1[i], lambda= O * R)#
		)#
#
	}#
	negL = -prod(L)#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
#nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=1.1, r=1.1), control=list(trace=FALSE))#
cat('True values:', 'p =', 1/(1 + exp(x)), 'R =', exp(r), '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
rm(list=ls())
### hierarchical: binomial survival of females, Poisson offspring#
# 25 Sep 2011#
#
# parms#
x = 1 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 0.5#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),10)) # females introduced#
Ot = rbinom(length(Nt), Nt, 1/(1 + exp(x)) ) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = exp(r) * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=FALSE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = sum(#
			dbinom(O, size = Nt[i], p = p) *#
			dpois(Nt1[i], lambda= O * R)#
		)#
#
	}#
	negL = -prod(L)#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
#nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=1.1, r=1.1), control=list(trace=FALSE))#
cat('True values:', 'p =', 1/(1 + exp(x)), 'R =', exp(r), '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
### hierarchical: binomial survival of females, Poisson offspring#
# 25 Sep 2011#
#
# parms#
x = 1 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 0.1#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),10)) # females introduced#
Ot = rbinom(length(Nt), Nt, 1/(1 + exp(x)) ) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = exp(r) * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=FALSE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = sum(#
			dbinom(O, size = Nt[i], p = p) *#
			dpois(Nt1[i], lambda= O * R)#
		)#
#
	}#
	negL = -prod(L)#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
#nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=1.1, r=1.1), control=list(trace=FALSE))#
cat('True values:', 'p =', 1/(1 + exp(x)), 'R =', exp(r), '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
### hierarchical: binomial survival of females, Poisson offspring#
# 25 Sep 2011#
#
# parms#
x = 1 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 1#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),10)) # females introduced#
Ot = rbinom(length(Nt), Nt, 1/(1 + exp(x)) ) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = exp(r) * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=FALSE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = sum(#
			dbinom(O, size = Nt[i], p = p) *#
			dpois(Nt1[i], lambda= O * R)#
		)#
#
	}#
	negL = -log(prod(L))#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
#nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=1.1, r=1.1), control=list(trace=FALSE))#
cat('True values:', 'p =', 1/(1 + exp(x)), 'R =', exp(r), '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
L
### hierarchical: binomial survival of females, Poisson offspring#
# 25 Sep 2011#
#
# parms#
x = 1 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 1#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),10)) # females introduced#
Ot = rbinom(length(Nt), Nt, 1/(1 + exp(x)) ) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = exp(r) * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=FALSE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = sum(#
			dbinom(O, size = Nt[i], p = p) *#
			dpois(Nt1[i], lambda= O * R)#
		)#
#
	}#
	print(L)#
	negL = -log(prod(L))#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
#nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=1.1, r=1.1), control=list(trace=FALSE))#
cat('True values:', 'p =', 1/(1 + exp(x)), 'R =', exp(r), '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
length(Nt)
### hierarchical: binomial survival of females, Poisson offspring#
# 25 Sep 2011#
#
# parms#
x = 1 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 1#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),10)) # females introduced#
Ot = rbinom(length(Nt), Nt, 1/(1 + exp(x)) ) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = exp(r) * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=FALSE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = sum(#
			dbinom(O, size = Nt[i], p = p) *#
			dpois(Nt1[i], lambda= O * R)#
		)#
#
	}#
	negL = -log(prod(L))#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
#nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=1.1, r=1.1), control=list(trace=FALSE))#
cat('True values:', 'p =', 1/(1 + exp(x)), 'R =', exp(r), '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
### hierarchical: binomial survival of females, Poisson offspring#
# 25 Sep 2011#
#
# parms#
x = 1 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 2#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),10)) # females introduced#
Ot = rbinom(length(Nt), Nt, 1/(1 + exp(x)) ) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = exp(r) * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=FALSE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = sum(#
			dbinom(O, size = Nt[i], p = p) *#
			dpois(Nt1[i], lambda= O * R)#
		)#
#
	}#
	negL = -log(prod(L))#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
#nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=1.1, r=1.1), control=list(trace=FALSE))#
cat('True values:', 'p =', 1/(1 + exp(x)), 'R =', exp(r), '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
### hierarchical: binomial survival of females, Poisson offspring#
# 25 Sep 2011#
#
# parms#
x = 1 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 3#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),10)) # females introduced#
Ot = rbinom(length(Nt), Nt, 1/(1 + exp(x)) ) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = exp(r) * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=FALSE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = sum(#
			dbinom(O, size = Nt[i], p = p) *#
			dpois(Nt1[i], lambda= O * R)#
		)#
#
	}#
	negL = -log(prod(L))#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
#nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=1.1, r=1.1), control=list(trace=FALSE))#
cat('True values:', 'p =', 1/(1 + exp(x)), 'R =', exp(r), '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
### hierarchical: binomial survival of females, Poisson offspring#
# 25 Sep 2011#
#
# parms#
x = 1 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 2#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),10)) # females introduced#
Ot = rbinom(length(Nt), Nt, 1/(1 + exp(x)) ) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = exp(r) * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=FALSE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = sum(#
			dbinom(O, size = Nt[i], p = p) *#
			dpois(Nt1[i], lambda= O * R)#
		)#
#
	}#
	negL = -log(prod(L))#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
#nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=1.1, r=1.1), control=list(trace=FALSE))#
cat('True values:', 'p =', 1/(1 + exp(x)), 'R =', exp(r), '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
### hierarchical: binomial survival of females, Poisson offspring#
# 25 Sep 2011#
#
# parms#
x = 1 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 2.5#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),10)) # females introduced#
Ot = rbinom(length(Nt), Nt, 1/(1 + exp(x)) ) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = exp(r) * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=FALSE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = sum(#
			dbinom(O, size = Nt[i], p = p) *#
			dpois(Nt1[i], lambda= O * R)#
		)#
#
	}#
	negL = -log(prod(L))#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
#nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=1.1, r=1.1), control=list(trace=FALSE))#
cat('True values:', 'p =', 1/(1 + exp(x)), 'R =', exp(r), '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
### hierarchical: binomial survival of females, Poisson offspring#
# 25 Sep 2011#
#
# parms#
x = -8 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 2.5#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),10)) # females introduced#
Ot = rbinom(length(Nt), Nt, 1/(1 + exp(x)) ) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = exp(r) * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=FALSE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = sum(#
			dbinom(O, size = Nt[i], p = p) *#
			dpois(Nt1[i], lambda= O * R)#
		)#
#
	}#
	negL = -log(prod(L))#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
#nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=1.1, r=1.1), control=list(trace=FALSE))#
cat('True values:', 'p =', 1/(1 + exp(x)), 'R =', exp(r), '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
### hierarchical: binomial survival of females, Poisson offspring#
# 25 Sep 2011#
#
# parms#
x = -6 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 2.5#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),10)) # females introduced#
Ot = rbinom(length(Nt), Nt, 1/(1 + exp(x)) ) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = exp(r) * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=FALSE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = sum(#
			dbinom(O, size = Nt[i], p = p) *#
			dpois(Nt1[i], lambda= O * R)#
		)#
#
	}#
	negL = -log(prod(L))#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
#nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=1.1, r=1.1), control=list(trace=FALSE))#
cat('True values:', 'p =', 1/(1 + exp(x)), 'R =', exp(r), '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
### hierarchical: binomial survival of females, Poisson offspring#
# 25 Sep 2011#
#
# parms#
x = -5 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 2.5#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),10)) # females introduced#
Ot = rbinom(length(Nt), Nt, 1/(1 + exp(x)) ) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = exp(r) * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=FALSE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = sum(#
			dbinom(O, size = Nt[i], p = p) *#
			dpois(Nt1[i], lambda= O * R)#
		)#
#
	}#
	negL = -log(prod(L))#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
#nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=1.1, r=1.1), control=list(trace=FALSE))#
cat('True values:', 'p =', 1/(1 + exp(x)), 'R =', exp(r), '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
### hierarchical: binomial survival of females, Poisson offspring#
# 25 Sep 2011#
#
# parms#
x = -3 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 2.5#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),10)) # females introduced#
Ot = rbinom(length(Nt), Nt, 1/(1 + exp(x)) ) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = exp(r) * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=FALSE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = sum(#
			dbinom(O, size = Nt[i], p = p) *#
			dpois(Nt1[i], lambda= O * R)#
		)#
#
	}#
	negL = -log(prod(L))#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
#nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=1.1, r=1.1), control=list(trace=FALSE))#
cat('True values:', 'p =', 1/(1 + exp(x)), 'R =', exp(r), '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
### hierarchical: binomial survival of females, Poisson offspring#
# 25 Sep 2011#
#
# parms#
x = -3 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 2.5#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),10)) # females introduced#
Ot = rbinom(length(Nt), Nt, 1/(1 + exp(x)) ) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = exp(r) * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=FALSE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = sum(#
			dbinom(O, size = Nt[i], p = p) *#
			dpois(Nt1[i], lambda= O * R)#
		)#
#
	}#
	negL = -log(prod(L))#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
#nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=0, r=1.1), control=list(trace=FALSE))#
cat('True values:', 'p =', 1/(1 + exp(x)), 'R =', exp(r), '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
### hierarchical: binomial survival of females, Poisson offspring#
# 25 Sep 2011#
#
# parms#
x = -3 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 2#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),10)) # females introduced#
Ot = rbinom(length(Nt), Nt, 1/(1 + exp(x)) ) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = exp(r) * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=FALSE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = sum(#
			dbinom(O, size = Nt[i], p = p) *#
			dpois(Nt1[i], lambda= O * R)#
		)#
#
	}#
	negL = -log(prod(L))#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
#nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=0, r=1), control=list(trace=FALSE))#
cat('True values:', 'p =', 1/(1 + exp(x)), 'R =', exp(r), '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
### hierarchical: binomial survival of females, Poisson offspring#
# 25 Sep 2011#
#
# parms#
x = -3 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 1#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),10)) # females introduced#
Ot = rbinom(length(Nt), Nt, 1/(1 + exp(x)) ) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = exp(r) * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=FALSE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = sum(#
			dbinom(O, size = Nt[i], p = p) *#
			dpois(Nt1[i], lambda= O * R)#
		)#
#
	}#
	negL = -log(prod(L))#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
#nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=0, r=1), control=list(trace=FALSE))#
cat('True values:', 'p =', 1/(1 + exp(x)), 'R =', exp(r), '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
### hierarchical: binomial survival of females, Poisson offspring#
# 25 Sep 2011#
#
# parms#
x = 3 # when x=8, Pr of survival=0.000; x=2, Pr=0.5; x=-8, Pr=0.999#
r = 1#
#
#p = 1/(1 + exp(x))#
#R = exp(r)#
#
# simulate#
Nt = sort(rep(c(0,1,2,4,8,16),10)) # females introduced#
Ot = rbinom(length(Nt), Nt, 1/(1 + exp(x)) ) # females surviving to oviposit#
Nt1 = rpois(length(Nt), lambda = exp(r) * Ot) # galls#
#
#
#
# specify neg log likelihood function#
#parms = list(x = 1.3, r = 1)#
#
nL = function(x, r, debug=FALSE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(Nt1))#
	for(i in 1:length(Nt1)){#
		O = 0:max(Nt[i])#
		L[i] = sum(#
			dbinom(O, size = Nt[i], p = p) *#
			dpois(Nt1[i], lambda= O * R)#
		)#
#
	}#
	negL = -log(prod(L))#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}#
#
#
#
#
#
# fit#
library(bbmle)#
#nL(x = 0, r=1)#
#
m1 = mle2(nL, start=list(x=0, r=1), control=list(trace=FALSE))#
cat('True values:', 'p =', 1/(1 + exp(x)), 'R =', exp(r), '\n')#
cat('Estimates:', 'p =', 1/(1 + exp(coef(m1)['x'])), 'R =', exp(coef(m1)['r']), '\n')
#
nL = function(x, r, debug=FALSE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(d$galls2011))#
	for(i in 1:length(L)){#
		O = 0:max(d$females[i])#
		L[i] = sum(#
			dbinom(O, size = d$females[i], p = p) *#
			dpois(d$galls2011[i], lambda= O * R)#
		)#
#
	}#
	negL = -log(prod(L))#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}
1 / (1+exp(3))
mle2(nL, start=list(x = 3, r = 1))
d = read.csv('~/Documents/DATA/2011 DATA/field/VAA map.csv')
mle2(nL, start=list(x = 3, r = 1))
BP = mle2(nL, start=list(x = 3, r = 1))
summary(BP)
cat('Estimates:', 'p =', 1/(1 + exp(coef(BP)['x'])), 'R =', exp(coef(BP)['r']), '\n')
profile.BP = profile(BP)
ci.BP = confint(BP)
ci.BP = confint(profile.BP)
ci.BP
1/ (1 + exp(ci.BP[1,]))
exp(ci.BP[2,])
plot(profile.BP)
m05 = mle2(galls2011 ~ dnbinom( mu = r * females, size=s ), #
	start = list(r = 0.5, s=0.4), data = d)
m05
AICtab(m05, BP)
m05.pois = mle2(galls2011 ~ dpois( mu = r * females), #
	start = list(r = 0.5), data = d)
m05.pois = mle2(galls2011 ~ dpois(lambda = r * females), #
	start = list(r = 0.5), data = d)
m05.pois
AICtab(m05, BP, m05.pois)
nL2 = function(x, r, s, debug=FALSE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(d$galls2011))#
	for(i in 1:length(L)){#
		O = 0:max(d$females[i])#
		L[i] = sum(#
			dbinom(O, size = d$females[i], p = p) *#
			dnbinom(d$galls2011[i], mu = O * R, size = s)#
		)#
#
	}#
	negL = -log(prod(L))#
	if(debug)#
		cat(x, r, s, negL, '\n')#
	return(negL)#
}
BNB = mle2(nL2, start=list(x = 3, r = 1, s=1))
BNB
cat('Estimates:', 'p =', 1/(1 + exp(coef(BNB)['x'])), 'R =', exp(coef(BNB)['r']), '\n')
profile.BNB = profile(BNB)
ci.BNB = confint(profile.BNB)
1/ (1 + exp(ci.BNB[1,]))
ci.BNB
)
exp(ci.BP[2,])
plot(profile.BNB)
ci.BNB
AICtab(m05, m05.pois, BP, BNB)
BICtab(m05, m05.pois, BP, BNB)
BIC(m05, m05.pois, BP, BNB)
AICtab(m05, m05.pois, BP, BNB)
d = read.csv('~/Documents/DATA/2011 DATA/field/VAA map.csv')
# load data, entered gall numbers on map data csv#
d = read.csv('~/Documents/DATA/2011 DATA/field/VAA map.csv')#
#
library(ggplot2)#
library(rgl)#
library(scatterplot3d)#
library(bbmle)#
#
# plotting questions:#
#		1. should I include the 2 dying plants?#
#		2. should I
p1 = ggplot(data = d, aes(x = females, y = galls2011)) +#
	geom_point(colour = 'royalblue', alpha = 1/2, position = position_jitter(w = 0.15, h = 0.15),#
	size = 2.5) + #
	theme_bw() + #
	opts( panel.grid.minor = theme_blank(), panel.grid.major = theme_blank()) # remove gridlines
p1.smooth = p1 + stat_smooth(method = 'loess', colour='royalblue', span=1)
p1.smooth
ggsave('~/Documents/Analysis repos/Eutreta-diana-density-quality-experiment/figs/galls~females.pdf',
	plot = p1.smooth, width=4, height=4)
p3 = ggplot(data = d, aes(x = psi.r, y = galls2011)) +#
	geom_point(colour = 'royalblue', alpha = 1/2, size = 2.5) + #
	scale_y_continuous(limits = c(0,12)) +#
	theme_bw()
p3
ggplot(data = d, aes(x = psi.r, y = galls2011)) +#
	geom_point(colour = 'royalblue', alpha = 1/2, size = 2.5) + #
	scale_y_continuous(limits = c(0,12)) +#
	theme_bw() + #
	opts( panel.grid.minor = theme_blank(), panel.grid.major = theme_blank())
# ~/Documents/Analysis repos/Eutreta-diana-density-quality-experiment/#
#	plotting VAA 2010 results.R#
#
###        plotting VAA 2010 results         ####
### density / host-plant quality experiment  ####
#
# graphical exploration#
# plotting number of galls collected from each experimental plant #
# in the 2009-2010 density/quality experiment at Valentine.#
#
# load data, entered gall numbers on map data csv#
d = read.csv('~/Documents/DATA/2011 DATA/field/VAA map.csv')#
#
library(ggplot2)#
library(rgl)#
library(scatterplot3d)#
library(bbmle)#
#
# plotting questions:#
#		1. should I include the 2 dying plants?#
#		2. should I include plants to which I introduced 0 females?#
#
#
## first 2-dimensional plots#
# load someone's hack to allow suppression of top and right borders#
#source("~/Documents/R/ggplot2/rnc_ggplot2_border_themes.r")#
#
# 1. plot number of galls in spring 2011 ~ number of females introduced in summer 2010#
p1 = ggplot(data = d, aes(x = females, y = galls2011)) +#
	geom_point(colour = 'royalblue', alpha = 1/2, position = position_jitter(w = 0.15, h = 0.15),#
	size = 2.5) + #
	theme_bw() + #
	opts( panel.grid.minor = theme_blank(), panel.grid.major = theme_blank()) # remove gridlines#
				#
# now add a smoother with confidence interval, methods include loess, lm, glm (family='poisson')#
p1.smooth = p1 + stat_smooth(method = 'loess', colour='royalblue', span=1) #
#
# save plot as pdf#
ggsave('~/Documents/Analysis repos/Eutreta-diana-density-quality-experiment/figs/galls~females.pdf', #
	plot = p1.smooth, width=4, height=4)#
#
# 2. plot number of galls in spring 2011 ~ #
#		number of naturally occuring, experimentally removed 2010 galls#
p2 = ggplot(data = d, aes(x = natural.galls, y = galls2011)) +#
	geom_point(colour = 'royalblue', alpha = 1/2, position = position_jitter(w = 0.15, h = 0.15),#
	size = 2.5) + theme_bw() + #
	opts( panel.grid.minor = theme_blank(), panel.grid.major = theme_blank())#
		#
# now add a smoother with confidence interval, methods include loess, lm, glm (family='poisson')#
p2.smooth = p2 + stat_smooth(method = 'loess', colour='royalblue', span=1)#
#
# save plot as a pdf#
ggsave(#
	'~/Documents/Analysis repos/Eutreta-diana-density-quality-experiment/figs/galls~naturalgalls.pdf', #
	plot = p2.smooth, width=4, height=4)#
#
# 3. plot number of galls in spring 2011 ~ time corrected water potential#
#		d$psi.r is residuals of linear regression psi ~ time#
p3 = ggplot(data = d, aes(x = psi.r, y = galls2011)) +#
	geom_point(colour = 'royalblue', alpha = 1/2, size = 2.5) + #
	scale_y_continuous(limits = c(0,12)) +#
	theme_bw() + #
	opts( panel.grid.minor = theme_blank(), panel.grid.major = theme_blank())#
		#
# now add a smoother with confidence interval, methods include loess, lm, glm (family='poisson')#
p3.smooth = p3 + stat_smooth(method = 'loess', colour='royalblue', span=1)#
#
# save plot as pdf#
ggsave('~/Documents/Analysis repos/Eutreta-diana-density-quality-experiment/figs/galls~rpsi.pdf', #
	plot = p3.smooth, width=4, height=4)#
#
## second 3-d plots#
#
# 1. plot galls on plants in spring 2011 ~ removed natural galls and introduced females#
# highlight.3d colors points in relation to y axis, the number of females#
# type='h' displays the height of each point#
s3d1 = scatterplot3d(d$natural.galls, d$females, d$galls2011, pch=16, highlight.3d=TRUE, #
	type='h', zlab = 'Galls in year t+1', ylab = 'Introduced females', #
	xlab = 'Galls in year t')#
# add a regression plane#
fit.pois = mle2(galls2011 ~ dpois(lambda = a + b * natural.galls + c * females), #
	start = list(a = mean(d$galls2011), b = 0, c = 0), method = 'SANN', data=d)#
s3d1$plane3d(fit.pois)#
dev.print(pdf, file=#
	"~/Documents/Analysis repos/Eutreta-diana-density-quality-experiment/figs/3d VAA 2010.pdf",#
	width=5.1, height=5.1, pointsize=8) # width/height are in inches#
#
#
# 2. interactive version of above plot#
plot3d(d$galls2011 ~ d$natural.galls + d$females, type='s', size=1, zlab='Number of galls', xlab=#
	'Previous year gall density',ylab='Number of females')#
plot3d(d$galls2011 ~ d$natural.galls + d$females, type='h', add=TRUE)
library(bbmle)#
library(emdbook)#
#
# load data, entered gall numbers on map data csv#
d = read.csv('~/Documents/DATA/2011 DATA/field/VAA map.csv')#
#
d$area = d$d1 * d$d2#
d$volume = d$area * d$h#
d$gpf = d$galls2011 / d$females#
d$gpf[is.nan(d$gpf)] = 0#
d$lgpf = log(d$gpf)#
#
# using approach from qualifying exam#
# see 'qe presentation.pdf'#
# Ricker between number of females and number of galls (larvae)#
# quality variables added in exponent#
# N(t+1) = females * exp(r(1-females/k) + b1*quality1 + b2*quality2)#
# negbinom or zero-inflated nbinom stochasticity#
# going with nbinom instead of pois b/c var is several times the mean#
# also it makes sense that the lambda on each shrub would be gamma distributed#
#
# m0. intercept model#
m0 = mle2(galls2011 ~ dnbinom( mu = mu, size = s), start = list(mu = #
	mean(d$galls2011), s=1), data=d)#
#
# m05. females, no density dependence#
m05 = mle2(galls2011 ~ dnbinom( mu = r * females, size=s ), #
	start = list(r = 0.5, s=0.4), data = d)#
#
# m05.pois females, no density dependence#
m05.pois = mle2(galls2011 ~ dpois(lambda = r * females), #
	start = list(r = 0.5), data = d)#
#
# m075 females, galls, no DD#
m075 = mle2(galls2011 ~ dnbinom( mu =  females * exp(r * natural.galls), size=s ), #
	start = list(r = 0.5, s=0.4, b = 0), data = d)#
#
# m1. females, ricker -- it can't seem to calculate profiles for this parameterization#
#m1 = mle2(galls2011 ~ dnbinom( mu = females * exp(r * (1 - females / k)), size=s ), #
#	start = list(r = -0.3, k = 4, s=0.4), data = d)#
	#
# m1. females, ricker#
m1 = mle2(galls2011 ~ dnbinom( mu = R * females * exp(-b * females), size=s ), #
	start = list(R = 0.5, b = 1, s=0.4), data = d)#
	#
# m2. females, beverton holt#
m2a = mle2(galls2011 ~ dnbinom( mu = exp(r) * females / (1 + a * females), size=s ), #
	start = list(r = 0.8, a = 0.1, s=0.4), data = d)#
	#
# m2. females, beverton holt#
m2b = mle2(galls2011 ~ dnbinom( mu = exp(r) * females / (1 + exp(a) * females), size=s ), #
	start = list(r = 0.8, a = 0.1, s=0.4), data = d)#
	#
# m2. females, beverton holt#
m2c = mle2(galls2011 ~ dnbinom( mu = exp(r) * females / (1 + females), size=s ), #
	start = list(r = 0.8, s=0.4), data = d)#
	#
# m2. females, beverton holt#
m2d = mle2(galls2011 ~ dnbinom( mu = exp(r) * females / (a + females), size=s ), #
	start = list(r = 0.8, a = 1, s=0.4), data = d)#
#
# m3. females, psi.r, ricker#
m3 = mle2(galls2011 ~ dnbinom( mu = females * exp(r * (1 - females / k) + #
	b1 * psi.r), size=s ), start = list(r = -0.3, k = 4, s=0.4, b1=0), data = d)#
#
# m4. females, galls, ricker#
m4 = mle2(galls2011 ~ dnbinom( mu = females * exp(r * (1 - females / k) + #
	b1 * natural.galls), size=s ), start = list(r = -0.3, k = 4, s=0.4, b1=0), #
	data = d)#
#
# m5. females, galls, psi.r, ricker#
m5 = mle2(galls2011 ~ dnbinom( mu = females * exp(r * (1 - females / k) + #
	b1 * natural.galls + b2 * psi.r), size=s ), start = list(r = -0.3, k = 4, s=0.4, #
	b1=0, b2=0), data = d)
fp = 0:18#
pred.m05 = data.frame(females = fp, galls = fp * coef(m05)['r'])#
#
# confidence intervals#
# nbinom is easy: mu is a parm#
# for m05, mu = r * females #
# so the only uncertainty in mu comes from r#
profile.m05 = profile(m05)#
ci.m05 = confint(profile.m05)#
pred.m05$ymin = ci.m05['r', 1] * fp#
pred.m05$ymax = ci.m05['r', 2] * fp#
#
p1.fitted = p1 + geom_smooth(aes(x=fp, y=galls, ymin=ymin, ymax=ymax), #
	data=pred.m05, stat='identity', colour='royalblue', fill='royalblue')
p1.fitted
p1.fitted = p1.fitted + geom_smooth(aes(x=fp, y=galls, ymin=ymin, ymax=ymax), #
	data=pred.m1, stat='identity', colour='red', fill='red', alpha=1/4)#
#
print(p1.fitted)
profile.m1 = profile(m1)#
ci.m1 = confint(profile.m1)#
pred.m1$ymin = ci.m1['R', 1] * fp * exp(-ci.m1['b', 2] * fp)#
pred.m1$ymax = ci.m1['R', 2] * fp * exp(0 * fp)
pred.m1$ymax = ci.m1['R', 2] * fp * exp(0 * fp)
pred.m1 = data.frame(females = fp, galls = coef(m1)['R'] * fp * exp(-coef(m1)['b'] * fp ))
# I imagine, the bounds that give the lowest low and highest high?#
profile.m1 = profile(m1)#
ci.m1 = confint(profile.m1)#
pred.m1$ymin = ci.m1['R', 1] * fp * exp(-ci.m1['b', 2] * fp)#
pred.m1$ymax = ci.m1['R', 2] * fp * exp(0 * fp)
p1.fitted = p1.fitted + geom_smooth(aes(x=fp, y=galls, ymin=ymin, ymax=ymax), #
	data=pred.m1, stat='identity', colour='red', fill='red', alpha=1/4)#
#
print(p1.fitted)
ggsave(filename = #
	'~/Documents/Analysis repos/Eutreta-diana-density-quality-experiment/figs/galls~females_fits.pdf',#
	plot = p1.fitted)
AICtab(m0, m05, m075, m1, m2a, m2b, m2c, m2d, m3, m4, m5)
BICtab(m0, m05, m075, m1, m2a, m2b, m2c, m2d, m3, m4, m5)
nL = function(x, r, debug=FALSE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(d$galls2011))#
	for(i in 1:length(L)){#
		O = 0:max(d$females[i])#
		L[i] = sum(#
			dbinom(O, size = d$females[i], p = p) *#
			dpois(d$galls2011[i], lambda= O * R)#
		)#
#
	}#
	negL = -log(prod(L))#
	if(debug)#
		cat(x, r, negL, '\n')#
	return(negL)#
}
BP = mle2(nL, start=list(x = 3, r = 1))
BP
cat('Estimates:', 'p =', 1/(1 + exp(coef(BP)['x'])), 'R =', exp(coef(BP)['r']), '\n')
profile.BP = profile(BP)#
ci.BP = confint(profile.BP)#
1/ (1 + exp(ci.BP[1,]))#
exp(ci.BP[2,])#
plot(profile.BP)
nL2 = function(x, r, s, debug=FALSE) {#
	p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(d$galls2011))#
	for(i in 1:length(L)){#
		O = 0:max(d$females[i])#
		L[i] = sum(#
			dbinom(O, size = d$females[i], p = p) *#
			dnbinom(d$galls2011[i], mu = O * R, size = s)#
		)#
#
	}#
	negL = -log(prod(L))#
	if(debug)#
		cat(x, r, s, negL, '\n')#
	return(negL)#
}#
#
#
BNB = mle2(nL2, start=list(x = 3, r = 1, s=1))#
cat('Estimates:', 'p =', 1/(1 + exp(coef(BNB)['x'])), 'R =', exp(coef(BNB)['r']), '\n')
profile.BNB = profile(BNB)
ci.BNB = confint(profile.BNB)#
1/ (1 + exp(ci.BNB[1,]))#
exp(ci.BNB[2,])#
plot(profile.BNB)
ci.BNB
nL2 = function(x, r, s, debug=FALSE) {#
	#p = 1/(1 + exp(x))#
	R = exp(r)#
	L = numeric(length(d$galls2011))#
	for(i in 1:length(L)){#
		O = 0:max(d$females[i])#
		L[i] = sum(#
			dbinom(O, size = d$females[i], p = x) *#
			dnbinom(d$galls2011[i], mu = O * R, size = s)#
		)#
#
	}#
	negL = -log(prod(L))#
	if(debug)#
		cat(x, r, s, negL, '\n')#
	return(negL)#
}#
#
#
BNB = mle2(nL2, start=list(x = 3, r = 1, s=1))
BNB = mle2(nL2, start=list(x = 0.5, r = 1, s=1))
BNB
cat('Estimates:', 'p =', 1/(1 + exp(coef(BNB)['x'])), 'R =', exp(coef(BNB)['r']), '\n')
profile.BNB = profile(BNB)
ci.BNB = confint(profile.BNB)
ci.BNB
plot(profile.BNB)
